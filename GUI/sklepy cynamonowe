package com.company;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class Main {
    public static void main(String[] args) {

        String book = "src/com/company/sklepy cynamonowe"; //ścieżka pliku
        int minLen = 5;

        try (Stream<String> lines = Files.lines(Paths.get(book))) {

            Map<Integer, List<String>> map =
                    lines
                            .map(linia-> linia.replace('.', ' '))
                            .map(linia-> linia.replace(',', ' '))
                            .map(linia-> linia.replace('-', ' '))
                            .map(linia-> linia.replace(';', ' '))
                            .map(linia -> linia.split(" "))
                            .flatMap(tab -> Stream.of(tab))
                            .filter(word -> filter(word)) //filtrowanie
                            .filter(word -> word.length() >= minLen)
                            .sorted(Comparator.naturalOrder()) //sortowanie od a-z
                            .collect(Collectors.groupingBy(e -> e.length()));

            //one chain of stream operations ;

            List<Integer> lastTwo = map.keySet().stream().sorted().collect(Collectors.toList());
            System.out.println("Two lists of the longest " + " words with all letters different: ");

            int len = lastTwo.get(lastTwo.size()-2);
            System.out.println("length: " + len + ": " + map.get(len));

            len = lastTwo.get(lastTwo.size()-1);
            System.out.println("length " + len + ": " + map.get(len));

        }

        catch(IOException e) {
            System.out.println("Something wrong...");
            e.printStackTrace();
            System.exit(1);
        }
    }

    //filtrowanie
    public static boolean filter(String word){
        for (int i = 0; i < word.length(); i++) {
            for(int j = 0; j < word.length(); j++) {
                if(i != j && word.toLowerCase().charAt(i) == word.toLowerCase().charAt(j)) {
                    return false;
                }
            }
        }
        return true;
    }
}
